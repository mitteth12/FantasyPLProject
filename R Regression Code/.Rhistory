data <- read.csv("~/Desktop/Data Analytics/Fantasy PL Project/FantasyPL_Data/2020-21/players_raw_pos.csv")
library(dplyr)
library(tidyverse)
library(caret)
library(leaps)
gk_data <- filter(data, element_type == "GK")
def_data <- filter(data, element_type == "DEF")
mid_data <- filter(data, element_type == "MID")
fwd_data <- filter(data, element_type == "FWD")
#Select only columns we want to model on
#gk_data <-gk_data %>% select(-c(element_type, first_name, second_name))
def_data <- def_data %>% select(-c(element_type, first_name, second_name))
mid_data <- mid_data %>% select(-c(element_type, first_name, second_name))
fwd_data <- fwd_data %>% select(-c(element_type, first_name, second_name))
model_gk <- regsubsets(total_points~., data=gk_data)
model_gk <- regsubsets(total_points~., data=gk_data)
#See which model works best for adj r^2, cp, and bic
res.sum.gk <- summary(model_gk)
library(dplyr)
#Load in Data and Packages
FPL_2021 <- read.csv("~/Desktop/Data Analytics/Fantasy PL Project/FantasyPL_Data/2020-21/players_raw.csv")
#Select Certain Columns to Observe and Make a Model With
FPL2021_Data <- FPL_2021 %>% select(-c(first_name, second_name, corners_and_indirect_freekicks_order,
direct_freekicks_order, dreamteam_count, ict_index_rank, id,
influence_rank, penalties_missed, penalties_order, red_cards, yellow_cards,
team_code, threat_rank, threat_rank_type, creativity_rank))
#Load in Packages
#install.packages("leaps")
library(tidyverse)
library(caret)
library(leaps)
#Get Visual of 2020-21 Season Data
sample_n(FPL2021_Data, 5)
#Make Multi Linear Regression Model Based on Variables
MLR2021_model <- lm(total_points~., data = FPL2021_Data)
summary(MLR2021_model)
#Make new dataframe without points per game and run model again
FPL2021_minusppg <- FPL2021_Data %>% select(-points_per_game)
MLR2021_revmodel <- lm(total_points~., data = FPL2021_minusppg)
summary(MLR2021_revmodel)
#Finding Best Model Using Best Subset Method
model_2021 <- regsubsets(total_points~., data = FPL2021_minusppg, nvmax=16)
summary(model_2021)
#See which model works best for adj r^2, cp, and bic
res.sum <- summary(model_2021)
data.frame(
Adj.R2 = which.max(res.sum$adjr2),
CP = which.min(res.sum$cp),
BIC = which.min(res.sum$bic)
)
#k-folds formula taken from above source
# id: model id
# object: regsubsets object
# data: data used to fit regsubsets
# outcome: outcome variable
get_model_formula <- function(id, object, outcome){
# get models data
models <- summary(object)$which[id,-1]
# Get outcome variable
#form <- as.formula(object$call[[2]])
#outcome <- all.vars(form)[1]
# Get model predictors
predictors <- names(which(models == TRUE))
predictors <- paste(predictors, collapse = "+")
# Build model formula
as.formula(paste0(outcome, "~", predictors))
}
#Function to get the cross validation error for a model
get_cv_error <- function(model.formula, data){
set.seed(1)
train.control <- trainControl(method = "cv", number = 14)
cv <- train(model.formula, data = data, method = "lm",
trControl = train.control)
cv$results$RMSE
}
# Compute cross-validation error
model.ids <- 1:14
cv.errors <-  map(model.ids, get_model_formula, model_2021, "total_points") %>%
map(get_cv_error, data = FPL2021_minusppg) %>%
unlist()
plot(best2021_model$fitted.values, data.rstudent)
best2021_model <- lm(total_points~assists + bonus + bps + clean_sheets + goals_scored + influence + minutes + saves + threat, data=FPL2021_minusppg)
data.resid <- resid(best2021_model)
data.stresid <- rstandard(best2021_model)
data.rstudent <- rstudent(best2021_model)
predictz <- predict(best2021_model)
predictz
plot(predictz, data.stresid)
plot(predictz, data.resid)
qqnorm(data.rstudent, pch=20)
qqline(data.rstudent, col="blue")
hist(data.rstudent) #histogram
plot(FPL2021_minusppg$assists, data.rstudent, pch=20) #residual vs. assists
library(car)
avPlots(best2021_model)
#Roberto Firmino
FPL_2021[321,]
#Predicted Firmino Points
predictz[321]
#Predicted Firmino Points
predictz[321]
NewFPL2021 <- read_csv("~/Desktop/Data Analytics/Fantasy PL Project/FantasyPL_Data/2020-21/players_raw.csv")
plot(best2021_model$fitted.values, data.rstudent)
plot(best2021_model$fitted.values, data.rstudent)
abline(h=0)
library(SciViews)
lmbest_model <- lm(ln(total_points) ~ assists + bonus + bps + clean_sheets + goals_scored + influence + minutes + saves + threat, data=FPL2021_minusppg)
library(SciViews)
lmbest_model <- lm(ln(total_points) ~ assists + bonus + bps + clean_sheets + goals_scored + influence + minutes + saves + threat, data=FPL2021_minusppg, na.rm=FALSE)
library(SciViews)
lmbest_model <- lm(ln(total_points) ~ assists + bonus + bps + clean_sheets + goals_scored + influence + minutes + saves + threat, data=FPL2021_minusppg, na.rm=TRUE)
library(SciViews)
lmbest_model <- lm(ln(total_points) ~ assists + bonus + bps + clean_sheets + goals_scored + influence + minutes + saves + threat, data=NewFPL2021)
View(NewFPL2021)
library(SciViews)
NewFPL2021 <- filter(NewFPL2021, total_points > 0)
lmbest_model <- lm(ln(total_points) ~ assists + bonus + bps + clean_sheets + goals_scored + influence + minutes + saves + threat, data=NewFPL2021)
tresid1 <- rstudent(lmbest_model)
par(mfrow = c(1,2))
qqnorm(tresid1, pch=20)
qqline(tresid1, col="blue")
hist(tresid1)
plot(lmbest_model$fitted.values, tresid1, pch=20)
abline(h=0)
plot(tresid1, type="o", pch=20)
abline(h=0)
library(SciViews)
NewFPL2021 <- filter(NewFPL2021, total_points > 0)
lmbest_model <- lm(ln(total_points) ~ assists + bonus + bps + clean_sheets + goals_scored + influence + minutes + saves + threat, data=NewFPL2021)
summary(lmbest_model)
sqrt_model <- lm(sqrt(total_points) ~ assists + bonus + bps + clean_sheets + goals_scored + influence + minutes + saves + threat, data=NewFPL2021)
summary(sqrt_model)
tresid2 <- rstudent(sqrt_model)
par(mfrow = c(1,2))
qqnorm(tresid2, pch=20)
qqline(tresid2, col="blue")
hist(tresid2)
plot(sqrt_model$fitted.values, tresid2, pch=20)
abline(h=0)
plot(tresid2, type="o", pch=20)
abline(h=0)
train <- read.csv("~/Desktop/Data Analytics/Fantasy PL Project/FantasyPL_Data/FPLTrainModel.csv")
View(train)
test <- read.csv("~/Desktop/Data Analytics/Fantasy PL Project/FantasyPL_Data/FPLCurrentYearPredict.csv")
View(test)
library(xgboost)
dtrain <- xgb.DMatrix(data = train)
library(xgboost)
dtrain <- xgb.DMatrix(data = train, label=train$label)
library(xgboost)
train_labels <- train %>% select(name)
dtrain <- xgb.DMatrix(data = train, label=train$label)
library(xgboost)
train_labels <- train %>% select(name)
dtrain <- xgb.DMatrix(data = train, label=train_labels)
